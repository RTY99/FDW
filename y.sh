#!/data/data/com.termux/files/usr/bin/bash

# ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô ASCII Art Logo
show_logo() {
    echo -e "\033[32m"
    cat << "EOF"
‚ï≠‚îÅ‚îÅ‚îÅ‚ïÆ‚ï±‚ï±‚ï±‚ï±‚ï±‚ï≠‚îÅ‚îÅ‚îÅ‚ïÆ
‚îÉ‚ï≠‚îÅ‚ïÆ‚îÉ‚ï±‚ï±‚ï±‚ï±‚ï±‚îÉ‚ï≠‚îÅ‚ïÆ‚îÉ
‚îÉ‚ï∞‚îÅ‚îÅ‚î≥‚îÅ‚îÅ‚î≥‚îÅ‚îÅ‚î´‚îÉ‚ï±‚îÉ‚î£‚îÅ‚îÅ‚î≥‚îÅ‚ïÆ
‚ï∞‚îÅ‚îÅ‚ïÆ‚îÉ‚ï≠‚ïÆ‚îÉ‚ï≠‚ïÆ‚îÉ‚îÉ‚ï±‚îÉ‚îÉ‚ï≠‚ïÆ‚îÉ‚ï≠‚ïØ
‚îÉ‚ï∞‚îÅ‚ïØ‚îÉ‚ï∞‚ïØ‚îÉ‚ï∞‚ïØ‚îÉ‚ï∞‚îÅ‚ïØ‚îÉ‚ï∞‚ïØ‚îÉ‚îÉ
‚ï∞‚îÅ‚îÅ‚îÅ‚î´‚ï≠‚îÅ‚î´‚ï≠‚îÅ‚îª‚îÅ‚îÅ‚îÅ‚îª‚îÅ‚îÅ‚îª‚ïØ
‚ï±‚ï±‚ï±‚ï±‚îÉ‚îÉ‚ï±‚îÉ‚îÉ
‚ï±‚ï±‚ï±‚ï±‚ï∞‚ïØ‚ï±‚ï∞‚ïØ YouTube Downloader
EOF
    echo -e "\033[0m"
}

# ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô Progress Bar
show_progress() {
    local width=50
    local percentage=$1
    local filled=$(printf "%.0f" $(echo "$percentage * $width / 100" | bc -l))
    local empty=$((width - filled))
    printf "\r["
    printf "%${filled}s" | tr ' ' '‚ñà'
    printf "%${empty}s" | tr ' ' '‚ñë'
    printf "] %3d%%" $percentage
}

# ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÅ‡∏•‡∏∞‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á‡πÅ‡∏û‡πá‡∏Ñ‡πÄ‡∏Å‡∏à
check_and_install() {
    local package=$1
    echo -e "\033[34müì¶ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö $package...\033[0m"
    if ! command -v $package >/dev/null 2>&1; then
        echo -e "\033[33m‚ö° ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á $package...\033[0m"
        pkg install $package -y
    fi
    echo -e "\033[32m‚úì ‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á $package ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢\033[0m"
}

# ‡πÅ‡∏™‡∏î‡∏á Logo
clear
show_logo

# ‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á‡πÅ‡∏û‡πá‡∏Ñ‡πÄ‡∏Å‡∏à‡∏ó‡∏µ‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô
echo -e "\n\033[36müîÑ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏£‡∏∞‡∏ö‡∏ö...\033[0m"
pkg update -y && pkg upgrade -y

for pkg in python ffmpeg nginx openssh; do
    check_and_install $pkg
done

pip install yt-dlp flask

# ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô
PORT=8080
DOWNLOAD_DIR="/sdcard/Download"
mkdir -p "$DOWNLOAD_DIR"
termux-setup-storage

# ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÑ‡∏ü‡∏•‡πå HTML ‡∏ó‡∏µ‡πà‡∏™‡∏ß‡∏¢‡∏á‡∏≤‡∏°
cat << 'EOF' > /data/data/com.termux/files/usr/share/nginx/html/index.html
<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>üé• Super YouTube Downloader</title>
    <style>
        body {
            font-family: 'Segoe UI', sans-serif;
            background: #1a1a1a;
            color: #fff;
            margin: 0;
            padding: 20px;
        }
        .container {
            max-width: 800px;
            margin: 0 auto;
            background: #2d2d2d;
            padding: 30px;
            border-radius: 10px;
            box-shadow: 0 0 20px rgba(0,0,0,0.5);
        }
        .input-group {
            margin: 20px 0;
            animation: fadeIn 0.5s;
        }
        @keyframes fadeIn {
            from { opacity: 0; transform: translateY(20px); }
            to { opacity: 1; transform: translateY(0); }
        }
        input[type="text"] {
            width: 100%;
            padding: 12px;
            border: none;
            background: #3d3d3d;
            color: #fff;
            border-radius: 5px;
            margin-bottom: 10px;
        }
        button {
            background: #4CAF50;
            color: white;
            padding: 12px 25px;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            transition: all 0.3s;
        }
        button:hover {
            background: #45a049;
            transform: translateY(-2px);
        }
        .status {
            margin-top: 20px;
            padding: 10px;
            border-radius: 5px;
            background: #3d3d3d;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>üé• Super YouTube Downloader</h1>
        <div class="input-group">
            <input type="text" id="url" placeholder="‡πÉ‡∏™‡πà‡∏•‡∏¥‡∏á‡∏Å‡πå YouTube ‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà...">
            <button onclick="download()">‚¨áÔ∏è ‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î</button>
        </div>
        <div class="status" id="status"></div>
    </div>
    <script>
        async function download() {
            const url = document.getElementById('url').value;
            const status = document.getElementById('status');
            status.innerHTML = '‚ö° ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î...';
            try {
                const response = await fetch('/download', {
                    method: 'POST',
                    headers: {'Content-Type': 'application/json'},
                    body: JSON.stringify({url})
                });
                const data = await response.json();
                status.innerHTML = `‚úÖ ‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô: ${data.filename}`;
            } catch (error) {
                status.innerHTML = '‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: ' + error;
            }
        }
    </script>
</body>
</html>
EOF

# ‡∏™‡∏£‡πâ‡∏≤‡∏á Flask app
cat << 'EOF' > /data/data/com.termux/files/home/app.py
from flask import Flask, request, jsonify
import subprocess
import os

app = Flask(__name__)

@app.route('/')
def home():
    return open('/data/data/com.termux/files/usr/share/nginx/html/index.html').read()

@app.route('/download', methods=['POST'])
def download():
    try:
        url = request.json['url']
        output = subprocess.check_output([
            'yt-dlp',
            '-f', 'best',
            '-o', '/sdcard/Download/%(title)s.%(ext)s',
            '--no-warnings',
            url
        ], stderr=subprocess.STDOUT)
        return jsonify({'status': 'success', 'filename': output.decode().split('\n')[-2]})
    except Exception as e:
        return jsonify({'status': 'error', 'message': str(e)}), 500

if __name__ == '__main__':
    app.run(host='0.0.0.0', port=8080)
EOF

# ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Nginx
echo "server {
    listen 8080;
    server_name localhost;
    location / {
        proxy_pass http://127.0.0.1:8080;
        proxy_set_header Host \$host;
        proxy_set_header X-Real-IP \$remote_addr;
    }
}" > /data/data/com.termux/files/usr/etc/nginx/sites-enabled/default

# ‡∏£‡∏µ‡∏™‡∏ï‡∏≤‡∏£‡πå‡∏ó Nginx
nginx -s reload

# ‡πÄ‡∏£‡∏¥‡πà‡∏° SSH tunnel
echo -e "\033[36müåê ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏£‡∏¥‡πà‡∏° SSH tunnel...\033[0m"
ssh -R 80:localhost:8080 nokey@localhost.run &

# ‡πÄ‡∏£‡∏¥‡πà‡∏° Flask server
echo -e "\033[32müöÄ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå...\033[0m"
python /data/data/com.termux/files/home/app.py &

# ‡πÅ‡∏™‡∏î‡∏á‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞
echo -e "\n\033[32m‚ú® ‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÅ‡∏•‡πâ‡∏ß!\033[0m"
echo -e "\033[36müì± Local URL: http://localhost:$PORT\033[0m"
echo -e "\033[36müåç ‡∏´‡∏£‡∏∑‡∏≠‡πÉ‡∏ä‡πâ URL ‡∏™‡∏≤‡∏ò‡∏≤‡∏£‡∏ì‡∏∞‡∏à‡∏≤‡∏Å SSH tunnel\033[0m"

wait
